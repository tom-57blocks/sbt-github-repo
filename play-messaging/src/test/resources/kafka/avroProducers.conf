include "defaultConfig.conf"

kafka.injectable.producer.avro {
  validTestProducer1: ${akka.kafka.producer} {
    executionContext: "xyz.jia.scala.commons.play.DummyTestExecutionContext"
    kafka-clients {
      client.id: "validTestProducer1"
      bootstrap.servers: ${kafkBootstrapServers}
      schema.registry.url: ${kafkaSchemaRegistry}
      specific.avro.reader: false
    }
  }

  validTestProducer2: ${akka.kafka.producer} {
    executionContext: "xyz.jia.scala.commons.play.DummyTestExecutionContext"
    kafka-clients {
      client.id: "validTestProducer2"
      bootstrap.servers: ${kafkBootstrapServers}
      schema.registry.url: ${kafkaSchemaRegistry}
      specific.avro.reader: true
    }
  }
}

avro.producer.invalid.testInvalidConfigScenarios {
  executionContext: ${?EXECUTION_CONTEXT}
  kafka-clients {
    client.id: "validTestProducer2"
    bootstrap.servers: ${kafkBootstrapServers}
    schema.registry.url: ${kafkaSchemaRegistry}
    specific.avro.reader: true
  }
}
